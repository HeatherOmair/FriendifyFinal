{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Heather\\\\Desktop\\\\Friendify\\\\frontend\\\\friendify\\\\src\\\\components\\\\AnimatedWrapper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\n\n// Animated list item wrapper\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AnimatedWrapper() {\n  _s();\n  const [order, setOrder] = useState(initialOrder);\n\n  // Shuffle the order every second to trigger the animation\n  useEffect(() => {\n    const interval = setInterval(() => setOrder(shuffle(order)), 1000);\n\n    // Clean up interval on unmount\n    return () => clearInterval(interval);\n  }, [order]);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    style: container,\n    children: order.map(backgroundColor => /*#__PURE__*/_jsxDEV(motion.li, {\n      layout: true // Animation trigger when layout changes\n      ,\n      transition: spring // Animation settings\n      ,\n      style: {\n        ...item,\n        backgroundColor\n      }\n    }, backgroundColor, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n// Initial order of colors to animate (pastel colors)\n_s(AnimatedWrapper, \"T/poyOJ1Dg4EYHtWtz7Vm0IaKbE=\");\n_c = AnimatedWrapper;\nconst initialOrder = [\"#ffb3d9\",\n// Pastel pink\n\"#b3d9ff\",\n// Pastel blue\n\"#ffb3ff\",\n// Soft pink\n\"#d0d8ff\" // Soft lavender\n];\n\n// Shuffle function to randomize the order\nfunction shuffle(array) {\n  return array.sort(() => Math.random() - 0.5);\n}\n\n// Transition settings for the motion animation\nconst spring = {\n  type: \"spring\",\n  damping: 20,\n  stiffness: 300\n};\n\n// Styles for the container and list items\nconst container = {\n  listStyle: \"none\",\n  padding: 0,\n  margin: 0,\n  position: \"relative\",\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  gap: 10,\n  width: 300,\n  flexDirection: \"row\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n};\nconst item = {\n  width: 100,\n  height: 100,\n  borderRadius: \"10px\"\n};\nvar _c;\n$RefreshReg$(_c, \"AnimatedWrapper\");","map":{"version":3,"names":["React","useState","useEffect","motion","jsxDEV","_jsxDEV","AnimatedWrapper","_s","order","setOrder","initialOrder","interval","setInterval","shuffle","clearInterval","style","container","children","map","backgroundColor","li","layout","transition","spring","item","fileName","_jsxFileName","lineNumber","columnNumber","_c","array","sort","Math","random","type","damping","stiffness","listStyle","padding","margin","position","display","flexWrap","gap","width","flexDirection","justifyContent","alignItems","height","borderRadius","$RefreshReg$"],"sources":["C:/Users/Heather/Desktop/Friendify/frontend/friendify/src/components/AnimatedWrapper.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\n// Animated list item wrapper\r\nexport default function AnimatedWrapper() {\r\n  const [order, setOrder] = useState(initialOrder);\r\n\r\n  // Shuffle the order every second to trigger the animation\r\n  useEffect(() => {\r\n    const interval = setInterval(() => setOrder(shuffle(order)), 1000);\r\n\r\n    // Clean up interval on unmount\r\n    return () => clearInterval(interval);\r\n  }, [order]);\r\n\r\n  return (\r\n    <ul style={container}>\r\n      {order.map((backgroundColor) => (\r\n        <motion.li\r\n          key={backgroundColor}\r\n          layout // Animation trigger when layout changes\r\n          transition={spring} // Animation settings\r\n          style={{ ...item, backgroundColor }}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\n// Initial order of colors to animate (pastel colors)\r\nconst initialOrder = [\r\n  \"#ffb3d9\",  // Pastel pink\r\n  \"#b3d9ff\",  // Pastel blue\r\n  \"#ffb3ff\",  // Soft pink\r\n  \"#d0d8ff\",  // Soft lavender\r\n];\r\n\r\n// Shuffle function to randomize the order\r\nfunction shuffle(array) {\r\n  return array.sort(() => Math.random() - 0.5);\r\n}\r\n\r\n// Transition settings for the motion animation\r\nconst spring = {\r\n  type: \"spring\",\r\n  damping: 20,\r\n  stiffness: 300,\r\n};\r\n\r\n// Styles for the container and list items\r\nconst container = {\r\n  listStyle: \"none\",\r\n  padding: 0,\r\n  margin: 0,\r\n  position: \"relative\",\r\n  display: \"flex\",\r\n  flexWrap: \"wrap\",\r\n  gap: 10,\r\n  width: 300,\r\n  flexDirection: \"row\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n};\r\n\r\nconst item = {\r\n  width: 100,\r\n  height: 100,\r\n  borderRadius: \"10px\",\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,eAAe;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAACS,YAAY,CAAC;;EAEhD;EACAR,SAAS,CAAC,MAAM;IACd,MAAMS,QAAQ,GAAGC,WAAW,CAAC,MAAMH,QAAQ,CAACI,OAAO,CAACL,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC;;IAElE;IACA,OAAO,MAAMM,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,oBACEH,OAAA;IAAIU,KAAK,EAAEC,SAAU;IAAAC,QAAA,EAClBT,KAAK,CAACU,GAAG,CAAEC,eAAe,iBACzBd,OAAA,CAACF,MAAM,CAACiB,EAAE;MAERC,MAAM,OAAC;MAAA;MACPC,UAAU,EAAEC,MAAO,CAAC;MAAA;MACpBR,KAAK,EAAE;QAAE,GAAGS,IAAI;QAAEL;MAAgB;IAAE,GAH/BA,eAAe;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIrB,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET;;AAEA;AAAArB,EAAA,CAzBwBD,eAAe;AAAAuB,EAAA,GAAfvB,eAAe;AA0BvC,MAAMI,YAAY,GAAG,CACnB,SAAS;AAAG;AACZ,SAAS;AAAG;AACZ,SAAS;AAAG;AACZ,SAAS,CAAG;AAAA,CACb;;AAED;AACA,SAASG,OAAOA,CAACiB,KAAK,EAAE;EACtB,OAAOA,KAAK,CAACC,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;AAC9C;;AAEA;AACA,MAAMV,MAAM,GAAG;EACbW,IAAI,EAAE,QAAQ;EACdC,OAAO,EAAE,EAAE;EACXC,SAAS,EAAE;AACb,CAAC;;AAED;AACA,MAAMpB,SAAS,GAAG;EAChBqB,SAAS,EAAE,MAAM;EACjBC,OAAO,EAAE,CAAC;EACVC,MAAM,EAAE,CAAC;EACTC,QAAQ,EAAE,UAAU;EACpBC,OAAO,EAAE,MAAM;EACfC,QAAQ,EAAE,MAAM;EAChBC,GAAG,EAAE,EAAE;EACPC,KAAK,EAAE,GAAG;EACVC,aAAa,EAAE,KAAK;EACpBC,cAAc,EAAE,QAAQ;EACxBC,UAAU,EAAE;AACd,CAAC;AAED,MAAMvB,IAAI,GAAG;EACXoB,KAAK,EAAE,GAAG;EACVI,MAAM,EAAE,GAAG;EACXC,YAAY,EAAE;AAChB,CAAC;AAAC,IAAApB,EAAA;AAAAqB,YAAA,CAAArB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}