{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Heather\\\\Desktop\\\\Friendify\\\\frontend\\\\friendify\\\\src\\\\components\\\\SignInForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Box } from '@mui/material';\nimport useFetch from '../hooks/useFetch'; // Import useFetch\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignInForm = ({\n  onLoginSuccess,\n  onLoginFailure\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false); // Track if submission is in progress\n  const [submitClicked, setSubmitClicked] = useState(false); // Flag for submitting\n\n  const {\n    data,\n    loading,\n    error: fetchError\n  } = useFetch(submitClicked ? 'http://localhost:5000/api/auth/login' : null,\n  // Trigger fetch after submission\n  'POST', {\n    username,\n    password\n  }, {\n    'Content-Type': 'application/json'\n  });\n\n  // This function will run when the form is submitted\n  const handleSubmit = e => {\n    e.preventDefault();\n    setError(''); // Clear previous error\n\n    // Only trigger the request if both fields are filled\n    if (username && password) {\n      setSubmitClicked(true); // Trigger the fetch call\n      setIsSubmitting(true); // Indicate that the form is being submitted\n    } else {\n      setError('Please fill in both username and password.');\n    }\n  };\n\n  // Effect to handle the response\n  useEffect(() => {\n    if (data && data.token) {\n      onLoginSuccess(data.token); // Notify parent component of success\n      setIsSubmitting(false); // Reset submitting state\n    }\n  }, [data, onLoginSuccess]); // Only run when `data` changes\n\n  useEffect(() => {\n    if (fetchError) {\n      setError(fetchError.message || 'An error occurred during login');\n      onLoginFailure(fetchError.message || 'An error occurred during login');\n      setIsSubmitting(false); // Reset submitting state on error\n    }\n  }, [fetchError, onLoginFailure]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"form-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"control\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block-cube\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Username\",\n            variant: \"outlined\",\n            fullWidth: true,\n            name: \"username\",\n            type: \"text\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            InputProps: {\n              style: {\n                backgroundColor: 'transparent',\n                color: '#fff',\n                fontFamily: 'monospace',\n                letterSpacing: '0.05em'\n              }\n            },\n            InputLabelProps: {\n              style: {\n                color: '#fff'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"control\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block-cube\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Password\",\n            variant: \"outlined\",\n            fullWidth: true,\n            name: \"password\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            InputProps: {\n              style: {\n                backgroundColor: 'transparent',\n                color: '#fff',\n                fontFamily: 'monospace',\n                letterSpacing: '0.05em'\n              }\n            },\n            InputLabelProps: {\n              style: {\n                color: '#fff'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn\",\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"outlined\",\n        sx: {\n          padding: '14px 16px',\n          color: '#fff',\n          letterSpacing: '0.1em',\n          fontWeight: 'bold',\n          fontFamily: 'monospace',\n          fontSize: '16px',\n          position: 'relative',\n          overflow: 'hidden',\n          borderColor: '#fff',\n          '&:hover': {\n            backgroundColor: 'rgba(255, 255, 255, 0.8)',\n            borderColor: '#fff'\n          }\n        },\n        disabled: loading || isSubmitting // Disable button during submission or loading\n        ,\n        children: loading || isSubmitting ? 'Logging in...' : 'Log In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(SignInForm, \"bDeIyj3+yHT/KJnUEv9ZHdVh0Ac=\", false, function () {\n  return [useFetch];\n});\n_c = SignInForm;\nexport default SignInForm;\nvar _c;\n$RefreshReg$(_c, \"SignInForm\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Box","useFetch","jsxDEV","_jsxDEV","SignInForm","onLoginSuccess","onLoginFailure","_s","username","setUsername","password","setPassword","error","setError","isSubmitting","setIsSubmitting","submitClicked","setSubmitClicked","data","loading","fetchError","handleSubmit","e","preventDefault","token","message","className","children","onSubmit","label","variant","fullWidth","name","type","value","onChange","target","InputProps","style","backgroundColor","color","fontFamily","letterSpacing","InputLabelProps","fileName","_jsxFileName","lineNumber","columnNumber","sx","padding","fontWeight","fontSize","position","overflow","borderColor","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Heather/Desktop/Friendify/frontend/friendify/src/components/SignInForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Box } from '@mui/material';\r\nimport useFetch from '../hooks/useFetch'; // Import useFetch\r\n\r\nconst SignInForm = ({ onLoginSuccess, onLoginFailure }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isSubmitting, setIsSubmitting] = useState(false); // Track if submission is in progress\r\n  const [submitClicked, setSubmitClicked] = useState(false); // Flag for submitting\r\n\r\n  const { data, loading, error: fetchError } = useFetch(\r\n    submitClicked ? 'http://localhost:5000/api/auth/login' : null, // Trigger fetch after submission\r\n    'POST',\r\n    { username, password },\r\n    { 'Content-Type': 'application/json' }\r\n  );\r\n\r\n  // This function will run when the form is submitted\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setError(''); // Clear previous error\r\n\r\n    // Only trigger the request if both fields are filled\r\n    if (username && password) {\r\n      setSubmitClicked(true); // Trigger the fetch call\r\n      setIsSubmitting(true); // Indicate that the form is being submitted\r\n    } else {\r\n      setError('Please fill in both username and password.');\r\n    }\r\n  };\r\n\r\n  // Effect to handle the response\r\n  useEffect(() => {\r\n    if (data && data.token) {\r\n      onLoginSuccess(data.token); // Notify parent component of success\r\n      setIsSubmitting(false); // Reset submitting state\r\n    }\r\n  }, [data, onLoginSuccess]); // Only run when `data` changes\r\n\r\n  useEffect(() => {\r\n    if (fetchError) {\r\n      setError(fetchError.message || 'An error occurred during login');\r\n      onLoginFailure(fetchError.message || 'An error occurred during login');\r\n      setIsSubmitting(false); // Reset submitting state on error\r\n    }\r\n  }, [fetchError, onLoginFailure]);\r\n\r\n  return (\r\n    <Box className=\"form-wrapper\">\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Username Field */}\r\n        <Box className=\"control\">\r\n          <div className=\"block-cube\">\r\n            <TextField\r\n              label=\"Username\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              name=\"username\"\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              InputProps={{\r\n                style: {\r\n                  backgroundColor: 'transparent',\r\n                  color: '#fff',\r\n                  fontFamily: 'monospace',\r\n                  letterSpacing: '0.05em',\r\n                },\r\n              }}\r\n              InputLabelProps={{\r\n                style: { color: '#fff' },\r\n              }}\r\n            />\r\n          </div>\r\n        </Box>\r\n\r\n        {/* Password Field */}\r\n        <Box className=\"control\">\r\n          <div className=\"block-cube\">\r\n            <TextField\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              InputProps={{\r\n                style: {\r\n                  backgroundColor: 'transparent',\r\n                  color: '#fff',\r\n                  fontFamily: 'monospace',\r\n                  letterSpacing: '0.05em',\r\n                },\r\n              }}\r\n              InputLabelProps={{\r\n                style: { color: '#fff' },\r\n              }}\r\n            />\r\n          </div>\r\n        </Box>\r\n\r\n        {/* Submit Button */}\r\n        <Button\r\n          className=\"btn\"\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          sx={{\r\n            padding: '14px 16px',\r\n            color: '#fff',\r\n            letterSpacing: '0.1em',\r\n            fontWeight: 'bold',\r\n            fontFamily: 'monospace',\r\n            fontSize: '16px',\r\n            position: 'relative',\r\n            overflow: 'hidden',\r\n            borderColor: '#fff',\r\n            '&:hover': {\r\n              backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n              borderColor: '#fff',\r\n            },\r\n          }}\r\n          disabled={loading || isSubmitting} // Disable button during submission or loading\r\n        >\r\n          {loading || isSubmitting ? 'Logging in...' : 'Log In'}\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SignInForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}